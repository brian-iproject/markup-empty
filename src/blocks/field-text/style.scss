@use "sass:selector";

@mixin field--medium {
	--padding-v: .75em;
	--padding-h: 1.875em;
	--border-radius: var(--border-radius--sm);
}

@mixin field--large {
	--padding-v: 1.375em;
	--padding-h: 1.875em;
	--border-radius: var(--border-radius);
}

.field-text {
	$block-name: &; // #{$block-name}__element

	display: block;
	font-size: var(--font-size--md);

	@include offset('typo');
	@include field--medium();

	&--medium { @include field--medium() }

	&--large { @include field--large()	}

	&__name {
		display: block;
		margin-bottom: .25em;
	}

	&__input-wrap {
		display: block;
		position: relative;
	}

	& svg {
		position: absolute;
		height: auto;
		width: auto;
		left: var(--padding-h);
		// Расчёт верхнего отступа с учетом line-height и font-size
		top: calc(var(--padding-v) + (var(--line-height) * 1em - 1em) / 2);
		max-width: 1em;
		max-height: 1em;
	}

	& svg + &__input {
		// Горизонтальный padding + max-width иконки + отступ между иконкой и текстом
		padding-left: calc(var(--padding-h) + 1em + .625em);
	}

	&__input {
		background: var(--color-gray--light);
		border: none;
		border-radius: var(--border-radius);
		color: var(--color-gray--dark);
		max-width: 100%;
		outline: none;
		vertical-align: middle;
		width: 100%;
		line-height: var(--line-height);
		font-size: inherit;

		padding: var(--padding-v, .75em) var(--padding-h, 1.25em);
		border-radius: var(--border-radius, var(--border-radius--sm));

		&:focus::placeholder {
			transition: var(--transition-time);
			color: var(--color-gray);
		}

		@at-root
		#{selector.unify(&, textarea)} {
			min-height: calc(var(--padding-v) * 2 + var(--line-height) * 1em);
			resize: none;
		}
	}

	&__help-text {
		@include field-help-text;
	}

	&--error {
		#{$block-name}__name,
		#{$block-name}__input,
		#{$block-name}__help-text {
			color: var(--color-danger);
		}

		#{$block-name}__input {
			border-color: var(--color-danger);
		}
	}
}